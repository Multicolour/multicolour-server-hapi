{
	"id": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
	"name": "Multicolour Requests",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "7f0c6e42-5891-f244-381c-1c91aae79f76",
			"name": "Header/request tests",
			"description": "",
			"order": [
				"6fa6fa9a-268b-5402-afcc-a39aaacc6303",
				"4d768fed-853b-fa79-394f-48d3dcb70b1c",
				"6ce25de9-ebc1-932e-0be5-902433b09c91"
			],
			"owner": 0
		},
		{
			"id": "ee51e8b7-c616-a6d9-a882-277682191fac",
			"name": "VERB tests",
			"description": "Tests with no auth plugin installed.",
			"order": [
				"d5b5e7ff-32c3-a015-2da9-05a325203378",
				"610b0ac0-bd42-708a-95ce-64919eb4f59b",
				"9402538c-e929-a0e2-0cc1-34785f44ba26",
				"f0e50197-0a35-715b-bde1-8a6c4c25cdd9",
				"569822dc-a260-7e86-a7a6-72c93871fcf5",
				"0672eb1f-efa4-1a5c-2469-92b6932e78f9",
				"e24d948b-ab39-f380-5d4d-3b87b7b6ef54",
				"0b765d9c-77fb-a33a-9a32-2d5c0bfce239",
				"919a1972-80c1-5167-3836-379ee915f4f3",
				"01540605-c575-0a04-c739-9abcec61170e",
				"ad1ac0c5-75dd-e8a7-7146-298e9f09a59c",
				"020ff702-d7c7-e8a1-7f23-0fc6de1f4e47",
				"c3268cbc-5d7c-d440-06c5-21667f0e1249",
				"65d6081e-9780-0a0d-640d-8d11ae10846d",
				"1cf204f0-3cbd-87c9-8a32-9f366a44b48c"
			],
			"owner": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111"
		}
	],
	"timestamp": 1476909272467,
	"owner": 0,
	"public": false,
	"requests": [
		{
			"id": "01540605-c575-0a04-c739-9abcec61170e",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Contains expected keys\"] = Object.keys(jsonData[0]).every(key => typeof jsonData[0][key] != \"undefined\")\ntests[\"person has the expected ID\"] = jsonData[0].id === 4",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487784249534,
			"name": "PUT non-existent person creates it with no parent",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"happy testing\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\"\n}"
		},
		{
			"id": "020ff702-d7c7-e8a1-7f23-0fc6de1f4e47",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person/1337",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Contains expected keys\"] = Object.keys(jsonData[0]).every(key => typeof jsonData[0][key] != \"undefined\")\ntests[\"person has the expected ID\"] = jsonData[0].id === 1337",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487784782070,
			"name": "PUT with id parameter creates person at that id",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"happy testing\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\"\n}"
		},
		{
			"id": "0672eb1f-efa4-1a5c-2469-92b6932e78f9",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person/3",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody)\ntests[\"Only one result returned\"] = jsonData.length === 1\ntests[\"contains no undefined values\"] = Object.keys(jsonData[0]).every(key => typeof jsonData[0][key] != \"undefined\")\ntests[\"has the right parent\"] = jsonData[0].parent.name === \"Parent name\"",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487865423592,
			"name": "GET created person with parent",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"first last\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\",\n  \"parent\": {\n  \t\"name\": \"Parent name\",\n    \"age\": 0,\n    \"password\": \"string\",\n    \"salt\": \"string\"\n  }\n}"
		},
		{
			"id": "0b765d9c-77fb-a33a-9a32-2d5c0bfce239",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person?name=first last 2",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Only one result returned\"] = jsonData.length === 1\ntests[\"contains no undefined values\"] = Object.keys(jsonData[0]).every(key => typeof jsonData[0][key] != \"undefined\")\ntests[\"has the right parent\"] = jsonData[0].parent.name === \"Parent name\"\ntests[\"has the right name\"] = jsonData[0].name === \"first last 2\"\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487865788348,
			"name": "GET person by query string parameter",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"first last\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\",\n  \"parent\": {\n  \t\"name\": \"Parent name\",\n    \"age\": 0,\n    \"password\": \"string\",\n    \"salt\": \"string\"\n  }\n}"
		},
		{
			"id": "1cf204f0-3cbd-87c9-8a32-9f366a44b48c",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person/17325768",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody)\n\ntests[\"Status code is 404\"] = responseCode.code === 404\ntests[\"Message is helpful\"] = jsonData.message === \"Document(s) not found\"",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487946966781,
			"name": "DELETE non existent person",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "4d768fed-853b-fa79-394f-48d3dcb70b1c",
			"headers": "Accept: junk\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"returns 400 bad request code\"] = jsonData.statusCode === 400\ntests[\"returns helpful message\"] = jsonData.message === \"child \\\"accept\\\" fails because [\\\"accept\\\" must be one of [application/json, application/json; charset=UTF-8, application/json;charset=UTF-8]]\"",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487934477849,
			"name": "GET with malformed accept header errors",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n \"identifier\": \"newexhibit\",\n \"type\" : \"exhibit\"\n}"
		},
		{
			"id": "569822dc-a260-7e86-a7a6-72c93871fcf5",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody)[0]\n\nvar expected = {\n  \"name\": \"first last 2\",\n  \"age\": 0,\n  \"salt\": \"string\"\n}\n\ntests[\"Contains no undefined values\"] = Object.keys(jsonData).every(key => typeof jsonData[key] != \"undefined\")\ntests[\"Has expected parent\"] = jsonData.parent.id === 2\n\nObject.keys(expected).forEach(key => {\n    tests[\"Value of \" + key + \" is expected\"] = jsonData[key] === expected[key]\n})",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487865302712,
			"name": "POST with related person",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"first last 2\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\",\n  \"parent\": {\n  \t\"name\": \"Parent name\",\n    \"age\": 0,\n    \"password\": \"string\",\n    \"salt\": \"string\"\n  }\n}"
		},
		{
			"id": "610b0ac0-bd42-708a-95ce-64919eb4f59b",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody)\nvar expected = {\n  \"name\": \"first last\",\n  \"age\": 0,\n  \"salt\": \"string\"\n}\n\ntests[\"Contains no undefined values\"] = Object.keys(jsonData).every(key => typeof jsonData[key] != \"undefined\")\n\nObject.keys(expected).forEach(key => {\n    tests[\"Value of \" + key + \" is expected\"] = jsonData[0][key] === expected[key]\n})",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487865237676,
			"name": "POST valid example",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"first last\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\"\n}"
		},
		{
			"id": "65d6081e-9780-0a0d-640d-8d11ae10846d",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person/1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Contains no unexpected results\"] = jsonData.length === 1",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487946887252,
			"name": "DELETE the first person",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "6ce25de9-ebc1-932e-0be5-902433b09c91",
			"headers": "Accept: application/json;charset=UTF-8\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"doesn't error\"] = JSON.parse(responseBody)",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487934609687,
			"name": "GET with UTF definition in Accept header doesn't error",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n \"identifier\": \"newexhibit\",\n \"type\" : \"exhibit\"\n}"
		},
		{
			"id": "6fa6fa9a-268b-5402-afcc-a39aaacc6303",
			"headers": "",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"returns 400 bad request code\"] = jsonData.statusCode === 400\ntests[\"returns helpful message\"] = jsonData.message === \"child \\\"accept\\\" fails because [\\\"accept\\\" must be one of [application/json, application/json; charset=UTF-8, application/json;charset=UTF-8]]\"",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487934469496,
			"name": "GET with missing accept header errors",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n \"identifier\": \"newexhibit\",\n \"type\" : \"exhibit\"\n}"
		},
		{
			"id": "919a1972-80c1-5167-3836-379ee915f4f3",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person?parent[name]=Parent name",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Only one result returned\"] = jsonData.length === 1\ntests[\"contains expected keys\"] = Object.keys(jsonData[0]).every(key => typeof jsonData[0][key] != \"undefined\")\ntests[\"Name is correct\"] = jsonData[0].name === \"first last 2\"\ntests[\"has the right parent\"] = jsonData[0].parent === 2",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487864973432,
			"name": "GET person by parent query string search",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"first last\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\",\n  \"parent\": {\n  \t\"name\": \"Parent name\",\n    \"age\": 0,\n    \"password\": \"string\",\n    \"salt\": \"string\"\n  }\n}"
		},
		{
			"id": "9402538c-e929-a0e2-0cc1-34785f44ba26",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Bad POST status is 400\"] = jsonData.statusCode === 400\ntests[\"Bad POST error is bad request\"] = jsonData.error === \"Bad Request\"\ntests[\"Bad POST message is expected\"] = jsonData.message === \"person:\\nundefined\\n\\nname:\\n\\\"firstAndLast\\\" validation rule failed for input: 'bad'\\nSpecifically, it threw an error.  Details:\\n undefined\"",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487782422676,
			"name": "POST invalid example",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"bad\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\"\n}"
		},
		{
			"id": "ad1ac0c5-75dd-e8a7-7146-298e9f09a59c",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Contains expected keys\"] = Object.keys(jsonData[0]).every(key => typeof jsonData[0][key] != \"undefined\")\ntests[\"person has the expected ID\" + jsonData[0].id] = jsonData[0].id === 4",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487944084937,
			"name": "PUT to existing person doesnt create it but assigns a newly created parent",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"happy testing\",\n  \"age\": 0,\n  \"parent\": {\n  \t\"name\": \"happy testing parent\",\n    \"age\": 0,\n    \"password\": \"Yeah!\"\n  }\n}"
		},
		{
			"id": "c3268cbc-5d7c-d440-06c5-21667f0e1249",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person/1",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PATCH",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Contains expected keys\"] = Object.keys(jsonData[0]).every(key => typeof jsonData[0][key] != \"undefined\")\ntests[\"person has the expected name after update\"] = jsonData[0].name === \"PATCH testing\"",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487863218276,
			"name": "PATCH updates a person",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"PATCH testing\",\n  \"age\": 2\n}"
		},
		{
			"id": "d5b5e7ff-32c3-a015-2da9-05a325203378",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"returns no rows\"] = jsonData.length === 0;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487864989404,
			"name": "GET with no results",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n \"identifier\": \"newexhibit\",\n \"type\" : \"exhibit\"\n}"
		},
		{
			"id": "e24d948b-ab39-f380-5d4d-3b87b7b6ef54",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person/3000",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody)\n\ntests[\"Status code is 404\"] = responseCode.code === 404\ntests[\"Message is helpful\"] = jsonData.message === \"Document(s) not found\"",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487947016445,
			"name": "GET person by out of range id",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"first last\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\",\n  \"parent\": {\n  \t\"name\": \"Parent name\",\n    \"age\": 0,\n    \"password\": \"string\",\n    \"salt\": \"string\"\n  }\n}"
		},
		{
			"id": "f0e50197-0a35-715b-bde1-8a6c4c25cdd9",
			"headers": "Accept: application/json\nContent-Type: application/json\n",
			"url": "http://localhost:1811/person",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var jsonData = JSON.parse(responseBody);\ntests[\"Bad POST status is 400\"] = jsonData.statusCode === 400\ntests[\"Bad POST error is bad request\"] = jsonData.error === \"Bad Request\"\ntests[\"Bad POST message is expected\"] = jsonData.message === \"undefined:\\nundefined\\n\\nname:\\nA record with that `name` already exists (`first last`).\"",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1487951702120,
			"name": "POST duplicate is 400",
			"description": "",
			"collectionId": "c2de7dd4-2759-f82d-79c9-df3a6d768111",
			"responses": [],
			"rawModeData": "{\n  \"name\": \"first last\",\n  \"age\": 0,\n  \"password\": \"string\",\n  \"salt\": \"string\"\n}"
		}
	]
}